<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[文章分类: python | Silent Reverie]]></title>
  <link href="http://myunlessor.me/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://myunlessor.me/"/>
  <updated>2015-11-21T12:38:20+08:00</updated>
  <id>http://myunlessor.me/</id>
  <author>
    <name><![CDATA[俞乐]]></name>
    <email><![CDATA[myunlessor@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[触摸Sublime Text Plugins]]></title>
    <link href="http://myunlessor.me/blog/2013/12/17/touch-sublime-text-plugins/"/>
    <updated>2013-12-17T21:02:00+08:00</updated>
    <id>http://myunlessor.me/blog/2013/12/17/touch-sublime-text-plugins</id>
    <content type="html"><![CDATA[<p>在<a href="/blog/2013/12/16/pragmatic-sublime-text-snippets/">Sublime Text Snippets实用技巧二则</a>一文中提到可以通过<code>Sublime Text</code>的<code>Snippets</code>功能快速在页面中插入图片占位符标签，本来在此基础上借助<code>Sublime Text</code>的<code>Plugins(插件)</code>功能进一步完善它。</p>

<!-- more -->

<h2 id="section">引子</h2>

<p>我们知道<a href="http://placekitten.com/">placekitten</a>为我们提供了为我们提供了生成图片占位符的方案，比如当我们在页面中插入<code>src</code>设为<code>http://placekitten.com/300/240</code>的<code>img</code>标签时，返回一张<code>300 x 240</code>的猫咪图片如下：</p>

<p><img src="http://placekitten.com/300/240" alt="kitten: 300 x 240" /></p>

<p>同样，<a href="http://placehold.it/">placehold.it</a>也提供了类似的服务，比如在页页插入<code>src</code>设为<code>http://placehold.it/300x240</code>的<code>img</code>标签时，返回一张标有图片尺寸的原型图，如下所示：</p>

<p><img src="http://placehold.it/300x240" alt="placehold: 300 x 240" /></p>

<p>现在我想利用同一个<code>tab trigger</code>可以将<a href="http://placekitten.com/">placekitten</a>和<a href="http://placehold.it/">placehold.it</a>整合到一起。也就是说当我们输入<code>kitten</code>时触发的第一个编辑点输入格式为<code>{width}/{height}</code>时，得到相应尺寸的猫咪图片，而当我们输入格式为<code>{width}x{height}</code>时，得到
标有图片尺寸的原型图。显然这涉及到逻辑判断，这时<code>Snippets</code>的正则功能已无能为力了，至少我没想到办法。</p>

<p>这时，<code>Sublime Text</code>提供给我们的插件功能就派上大用场了。</p>

<h2 id="section-1">正文</h2>

<p>我们在<code>Sublime Text</code>官网上可以了解到，在<code>Sublime Text</code>的早期版本中，作者原本打算将<code>Scheme</code>语言作为<code>Sublime Text</code>的插件开发语言，但考虑到<code>Scheme</code>语言方言多，使用人少且门槛高。后来调研后决定采用<code>Python</code>脚本语言作为插件开发语言，事后证明这一抉择是十分明智的，<code>Python</code>脚本语言易学易用，使用人群广泛，才有了如今<code>Sublime Text</code>插件开发活跃的生态圈。</p>

<p>有关<code>Sublime Text</code>的插件开发文档可参考<a href="http://docs.sublimetext.info/en/latest/reference/plugins.html">这里</a>、<a href="http://docs.sublimetext.info/en/latest/extensibility/plugins.html">这里</a>还有<a href="http://www.sublimetext.com/docs/3/api_reference.html">这里</a>，<a href="http://www.sublimetext.com/forum/">官网论坛</a>也是个很不错的学习交流的地方，在此就不多讲了。</p>

<p>本文要分享的是一个很简单的通过<code>tab</code>触发的插件，以整合<a href="http://placekitten.com/">placekitten</a>和<a href="http://placehold.it/">placehold.it</a>服务，具体触发机制如下：</p>

<ol>
  <li>输入<code>pi</code>后按<code>tab</code>键触发<a href="http://placehold.it/">placehold.it</a>服务，触发后可交互性指定图片占位符宽高了</li>
  <li>输入<code>pi{numbers}</code>后按<code>tab</code>键触发<a href="http://placehold.it/">placehold.it</a>服务，其中<code>{numbers}</code>为图片占位符的宽高（即占位符图片为正方形）</li>
  <li>输入<code>pi{width}x{height}</code>后按<code>tab</code>键触发<a href="http://placehold.it/">placehold.it</a>服务，其中<code>{width}</code>指定图片占位符的宽度，<code>{height}</code>指定图片占位符的高度，注意<code>{width}</code>和<code>{height}</code>之间是小写的<code>x</code></li>
  <li>输入<code>pi{width}X{height}</code>后按<code>tab</code>键触发<a href="http://placekitten.com/">placekitten</a>服务，其中<code>{width}</code>指定图片占位符的宽度，<code>{height}</code>指定图片占位符的高度，注意<code>{width}</code>和<code>{height}</code>之间是大写的<code>X</code></li>
</ol>

<p>具体例子如下：</p>

<p>在文档中输入<code>pi</code>后按<code>tab</code>键触发后返回如下标签，此时高亮显示<code>300x240</code>，可以交互性地指定宽高了，然后<code>tab</code>键跳至第2个编辑点可选择是否保留<code>width</code>和<code>height</code>属性</p>

<p><code>html
&lt;img src="http://placehold.it/300x240" width="300" height="240" title="PLACE.IT: [300 x 240]" alt="" /&gt;
</code></p>

<p>在文档中输入<code>pi100</code>后按<code>tab</code>键触发后返回如下标签，同时可选择是否保留<code>width</code>和<code>height</code>属性</p>

<p><code>html
&lt;img src="http://placehold.it/100x100" width="100" height="100" title="PLACE.IT: [100 x 100]" alt="" /&gt;
</code></p>

<p>在文档中输入<code>pi150x180</code>后按<code>tab</code>键触发后返回如下标签，同时可选择是否保留<code>width</code>和<code>height</code>属性</p>

<p><code>html
&lt;img src="http://placehold.it/150x180" width="150" height="180" title="PLACE.IT: [150 x 180]" alt="" /&gt;
</code></p>

<p>在文档中输入<code>pi150X180</code>后按<code>tab</code>键触发后返回如下标签，同时可选择是否保留<code>width</code>和<code>height</code>属性</p>

<p><code>html
&lt;img src="http://placekitten.com/150/180" width="150" height="180" title="KITTEN: [150 x 180]" alt="" /&gt;
</code></p>

<p>废话不多说，最后附上相关代码：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>图片占位符插件 (PlaceImage.py)</span> <a href='/downloads/code/PlaceImage.py'>下载</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">sublime_plugin</span><span class="o">,</span> <span class="nn">re</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">PlaceImageCommand</span><span class="p">(</span><span class="n">sublime_plugin</span><span class="o">.</span><span class="n">EventListener</span><span class="p">):</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">pi_snip</span> <span class="o">=</span> <span class="s">&#39;&lt;img src=&quot;http://placehold.it/${1:300x240}&quot;${2: width=&quot;${1/^(?:[^\d]*)?([\d]*)x?.*$/$1/i}&quot; height=&quot;${1/^(?:[^\d]*)([\d]*?)x?([\d]*)(?:[^x]*)?$/$+/i}&quot;}${4: title=&quot;${3:PLACE.IT: [${1/^(?:[^\d]*)?([\d]*)x?.*$/$1/i} x ${1/^(?:[^\d]*)([\d]*?)x?([\d]*)(?:[^x]*)?$/$+/i}]}&quot;} alt=&quot;${5:Edit Me}&quot; /&gt;&#39;</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">placeit</span> <span class="o">=</span> <span class="s">&#39;&lt;img src=&quot;http://placehold.it/</span><span class="si">%s</span><span class="s">x</span><span class="si">%s</span><span class="s">&quot;${1: width=&quot;</span><span class="si">%s</span><span class="s">&quot; height=&quot;</span><span class="si">%s</span><span class="s">&quot;}${3: title=&quot;${2:PLACE.IT: [</span><span class="si">%s</span><span class="s"> x </span><span class="si">%s</span><span class="s">]}&quot;} alt=&quot;${4:Edit Me}&quot; /&gt;&#39;</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">kitten</span>  <span class="o">=</span> <span class="s">&#39;&lt;img src=&quot;http://placekitten.com/</span><span class="si">%s</span><span class="s">/</span><span class="si">%s</span><span class="s">&quot;${1: width=&quot;</span><span class="si">%s</span><span class="s">&quot; height=&quot;</span><span class="si">%s</span><span class="s">&quot;} title=&quot;${2:KITTEN: [</span><span class="si">%s</span><span class="s"> x </span><span class="si">%s</span><span class="s">]}&quot; alt=&quot;${3:Edit Me}&quot; /&gt;&#39;</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">pattern</span> <span class="o">=</span> <span class="s">r&#39;^pi(?:(\d+)(?:(x|X)(\d+))?)?$&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">on_query_completions</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">view</span><span class="p">,</span> <span class="n">prefix</span><span class="p">,</span> <span class="n">locations</span><span class="p">):</span>
</span><span class='line'>    <span class="n">match</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">pattern</span><span class="p">,</span> <span class="n">prefix</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">match</span><span class="p">:</span>
</span><span class='line'>      <span class="n">groups</span> <span class="o">=</span> <span class="n">match</span><span class="o">.</span><span class="n">groups</span><span class="p">()</span>
</span><span class='line'>      <span class="n">numNil</span> <span class="o">=</span> <span class="n">groups</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="bp">None</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c"># handle tab trigger: `pi`</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">numNil</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
</span><span class='line'>        <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">pi_snip</span>
</span><span class='line'>
</span><span class='line'>      <span class="c"># handle tab trigger: `pi{numbers}`</span>
</span><span class='line'>      <span class="k">elif</span> <span class="n">numNil</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
</span><span class='line'>        <span class="n">width</span>  <span class="o">=</span> <span class="n">groups</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>        <span class="n">height</span> <span class="o">=</span> <span class="n">width</span>
</span><span class='line'>        <span class="n">value</span>  <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">placeit</span> <span class="o">%</span> <span class="p">((</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">)</span> <span class="o">*</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="c"># handle tab trigger: `pi{width}(x|X){height}`</span>
</span><span class='line'>      <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="n">width</span>  <span class="o">=</span> <span class="n">groups</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>        <span class="n">height</span> <span class="o">=</span> <span class="n">groups</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
</span><span class='line'>        <span class="n">source</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">placeit</span> <span class="k">if</span> <span class="n">groups</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="s">&#39;x&#39;</span> <span class="k">else</span> <span class="bp">self</span><span class="o">.</span><span class="n">kitten</span>
</span><span class='line'>        <span class="n">value</span>  <span class="o">=</span> <span class="n">source</span> <span class="o">%</span> <span class="p">((</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">)</span> <span class="o">*</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>      <span class="n">value</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="p">[(</span><span class="n">prefix</span><span class="p">,</span> <span class="n">prefix</span><span class="p">,</span> <span class="n">value</span><span class="p">)]</span> <span class="k">if</span> <span class="n">value</span> <span class="k">else</span> <span class="p">[]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>将此段代码直接保存到<code>Packages</code>目录下即可使用啦！</p>

<h2 id="section-2">参考</h2>
<ol>
  <li><a href="http://docs.sublimetext.info/en/latest/reference/plugins.html">Plugins Reference</a></li>
  <li><a href="http://docs.sublimetext.info/en/latest/extensibility/plugins.html">Plugins Usage</a></li>
  <li><a href="http://www.sublimetext.com/docs/3/api_reference.html">API Reference</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[import this 与恺撒密码]]></title>
    <link href="http://myunlessor.me/blog/2013/06/04/import-this-and-caesar-cipher/"/>
    <updated>2013-06-04T20:56:00+08:00</updated>
    <id>http://myunlessor.me/blog/2013/06/04/import-this-and-caesar-cipher</id>
    <content type="html"><![CDATA[<p>学过<code>python</code>脚本语言的人都知道<code>python</code>中有一个叫<code>this</code>的模块（<code>module</code>）。该模块只做了件很简单的事，打印一段字符串，内容是有关python语言的一些禅语（也可以称它为<code>python</code>哲学）。</p>

<!-- more -->

<p>要显示它很简单，在<code>python</code>的<code>REPL</code>（<code>Read-Eval-Print Loop</code>）中键入<code>import this</code>，可以看到如下字符串:</p>

<p>```
The Zen of Python, by Tim Peters</p>

<p>Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren’t special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one– and preferably only one –obvious way to do it.
Although that way may not be obvious at first unless you’re Dutch.
Now is better than never.
Although never is often better than <em>right</em> now.
If the implementation is hard to explain, it’s a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea – let’s do more of those!
```</p>

<p>我想，这个模块应该是<code>python</code>里最简单、也最特殊的模块罢！出于好奇，查看了下这个模块的源码，如下所示：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>python哲学 (this.py)</span> <a href='/downloads/code/this.py'>下载</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;Gur Mra bs Clguba, ol Gvz Crgref</span>
</span><span class='line'>
</span><span class='line'><span class="s">Ornhgvshy vf orggre guna htyl.</span>
</span><span class='line'><span class="s">Rkcyvpvg vf orggre guna vzcyvpvg.</span>
</span><span class='line'><span class="s">Fvzcyr vf orggre guna pbzcyrk.</span>
</span><span class='line'><span class="s">Pbzcyrk vf orggre guna pbzcyvpngrq.</span>
</span><span class='line'><span class="s">Syng vf orggre guna arfgrq.</span>
</span><span class='line'><span class="s">Fcnefr vf orggre guna qrafr.</span>
</span><span class='line'><span class="s">Ernqnovyvgl pbhagf.</span>
</span><span class='line'><span class="s">Fcrpvny pnfrf nera&#39;g fcrpvny rabhtu gb oernx gur ehyrf.</span>
</span><span class='line'><span class="s">Nygubhtu cenpgvpnyvgl orngf chevgl.</span>
</span><span class='line'><span class="s">Reebef fubhyq arire cnff fvyragyl.</span>
</span><span class='line'><span class="s">Hayrff rkcyvpvgyl fvyraprq.</span>
</span><span class='line'><span class="s">Va gur snpr bs nzovthvgl, ershfr gur grzcgngvba gb thrff.</span>
</span><span class='line'><span class="s">Gurer fubhyq or bar-- naq cersrenoyl bayl bar --boivbhf jnl gb qb vg.</span>
</span><span class='line'><span class="s">Nygubhtu gung jnl znl abg or boivbhf ng svefg hayrff lbh&#39;er Qhgpu.</span>
</span><span class='line'><span class="s">Abj vf orggre guna arire.</span>
</span><span class='line'><span class="s">Nygubhtu arire vf bsgra orggre guna *evtug* abj.</span>
</span><span class='line'><span class="s">Vs gur vzcyrzragngvba vf uneq gb rkcynva, vg&#39;f n onq vqrn.</span>
</span><span class='line'><span class="s">Vs gur vzcyrzragngvba vf rnfl gb rkcynva, vg znl or n tbbq vqrn.</span>
</span><span class='line'><span class="s">Anzrfcnprf ner bar ubaxvat terng vqrn -- yrg&#39;f qb zber bs gubfr!&quot;&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">d</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'><span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="p">(</span><span class="mi">65</span><span class="p">,</span> <span class="mi">97</span><span class="p">):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">26</span><span class="p">):</span>
</span><span class='line'>        <span class="n">d</span><span class="p">[</span><span class="nb">chr</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="n">c</span><span class="p">)]</span> <span class="o">=</span> <span class="nb">chr</span><span class="p">((</span><span class="n">i</span><span class="o">+</span><span class="mi">13</span><span class="p">)</span> <span class="o">%</span> <span class="mi">26</span> <span class="o">+</span> <span class="n">c</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="n">d</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">c</span><span class="p">)</span> <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">s</span><span class="p">]))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>呈现在眼前的不是一段平淡无奇的print语句，而采用了恺撒密码算法（<code>Caesar cipher</code>）。以下内容摘自维基百科，详见<a href="http://goo.gl/n9Ldz">凯撒密码</a>:</p>

<blockquote>
  <p>在密码学中,恺撒密码(或称恺撒加密、恺撒变换、变换加密)是一种最简单且最广为人知的加密技术。它是一种替换加密的技 术,明文中的所有字母都在字母表上向后(或向前)按照一个固定数目进行偏移后被替换成密文。例如,当偏移量是3的时候,所有的字母A将被替换成 D,B变成E,以此类推。这个加密方法是以恺撒的名字命名的,当年恺撒曾用此方法与其将军们进行联系。<br />
恺撒密码通常被作为其他更复杂的加密方法中的一个步骤,例如维吉尼尔密码。恺撒密码还在现代的 ROT13系统中被应用。但是 和所有的利用字母表进行替换的加密技术一样,恺撒密码非常容易被破解,而且在实际应用中也无法保证通信安全。</p>
</blockquote>

<p>可以看到，恺撒密码的原理很简单，对每个字母按照同一偏移量映射为别的字母，这样就完成了简单的加密。</p>

<p>看到<code>this</code>模块，我最大的感悟就是<code>python</code>语言优雅简洁的表达能力，我试过用<code>JavaScript</code>语言表达恺撒密码，实在为它感到汗颜。大概是因为<code>JavaScript</code>表达的废话太多，才催生了<code>CoffeeScript</code>这种比<code>JavaScript</code>更具表达力的语言吧。当然这得力于<code>CoffeeScript</code>大量借鉴<code>python、ruby</code>这种表达能力强的语言的语法才使然哩！</p>

<p><code>this.py</code>中用到的取余运算符<code>%</code>有一个很值得学习的技巧，比如我们想让一个变量在某个上限和下限范围内递增或递减，我们一般会写这样的代码：</p>

<p>```js
(function () {
  var lower   = 10,
      upper   = 17,
      current = 14;</p>

<p>// 单位递增
  function next() {
    if (current &lt; upper) {
      current += 1;
    } else {
      current = lower;
    }
    return current;
  }</p>

<p>// 单位递减
  function prev() {
    if (current &gt; lower) {
      current -= 1;
    } else {
      current = upper;
    }
    return current;
  }</p>

<p>console.log(next()); // current = 15
  console.log(next()); // current = 16
  console.log(next()); // current = 17
  console.log(next()); // current = 10
}());
```</p>

<p>利用取余运算符<code>%</code>，我们可以将如上代码简化为如下（注意此时没有了<code>if</code>条件语句）:</p>

<p>```js
(function () {
  var lower   = 10,
      upper   = 17,
      dist    = upper - lower + 1,
      current = 14;</p>

<p>function next() {
    return (current = lower + (current - lower + 1 + dist) % dist);
  }</p>

<p>function prev() {
    return (current = lower + (current - lower - 1 + dist) % dist);
  }</p>

<p>console.log(prev()); // current = 13
  console.log(prev()); // current = 12
  console.log(prev()); // current = 11
  console.log(prev()); // current = 10
  console.log(prev()); // current = 17
}());
```</p>

]]></content>
  </entry>
  
</feed>
